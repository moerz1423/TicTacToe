# name: Java CI/CD
#
# on:
#   pull_request:
#     branches:
#       - main
#   push:
#     branches:
#       - main
#
# jobs:
#   build:
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#
#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           distribution: 'adopt'
#           java-version: '17'
#
#       - name: Build with Maven
#         run: mvn -B package --file pom.xml
#
#       - name: Run tests
#         run: mvn test --file pom.xml
#
#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       # - name: Upload JAR artifact
#       #   uses: actions/upload-artifact@v2
#       #   with:
#       #     name: app
#       #     # path: target/TicTacToe.jar
#       #     path: ./target/
#       #     if-no-files-found: error
#
#       - name: Set up JDK 17 for deployment
#         uses: actions/setup-java@v2
#         with:
#           distribution: 'adopt'
#           java-version: '17'
#
#       - name: Download JAR artifact
#         uses: actions/download-artifact@v2
#         with:
#           name: app
#           # path: target/
#           path: target/
#
#       - name: Deploy to GitHub Releases
#         id: deploy
#         uses: softprops/action-gh-release@v1
#         with:
#           files: target/TicTacToe.jar
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#

name: Maven CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    #services:
    #  redis:
    #    image: redis
    #    options: >-
    #      --health-cmd "redis-cli ping"
    #      --health-interval 10s
    #      --health-timeout 5s
    #      --health-retries 5
    #    ports:
    #      - 6379:6379

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test project with Maven
        run: mvn -B package --file pom.xml


  publish-job:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 14
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging

#  build-docker-image:
#    name: Publish to Docker Hub
#    runs-on: ubuntu-latest
#    needs: [build_and_test]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Login to Docker Hub
#        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#      - name: Build Container image
#        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
#      - name: Publish Docker image
#        run: docker push ${{ secrets.DOCKER_REPO }}